// Code generated by WARHORSE protoc-gen-go. DO NOT EDIT EXCEPET SERVER VERSION.
// source: warhorse.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	warhorse.proto

It has these top-level messages:
	Proto
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RestfulMethod int32

const (
	RestfulMethod_METHODNULL RestfulMethod = 0
	RestfulMethod_POST       RestfulMethod = 1
	RestfulMethod_PUT        RestfulMethod = 2
	RestfulMethod_GET        RestfulMethod = 3
	RestfulMethod_DELETE     RestfulMethod = 4
	RestfulMethod_OPTIONS    RestfulMethod = 5
	RestfulMethod_HEAD       RestfulMethod = 6
)

var RestfulMethod_name = map[int32]string{
	0: "METHODNULL",
	1: "POST",
	2: "PUT",
	3: "GET",
	4: "DELETE",
	5: "OPTIONS",
	6: "HEAD",
}
var RestfulMethod_value = map[string]int32{
	"METHODNULL": 0,
	"POST":       1,
	"PUT":        2,
	"GET":        3,
	"DELETE":     4,
	"OPTIONS":    5,
	"HEAD":       6,
}

func (x RestfulMethod) String() string {
	return proto.EnumName(RestfulMethod_name, int32(x))
}
func (RestfulMethod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// BODY 体格式
type RestfulFormat int32

const (
	RestfulFormat_FORMATNULL RestfulFormat = 0
	RestfulFormat_XML        RestfulFormat = 1
	RestfulFormat_JSON       RestfulFormat = 2
	RestfulFormat_PROTOBUF   RestfulFormat = 3
	RestfulFormat_RAWQUERY   RestfulFormat = 4
)

var RestfulFormat_name = map[int32]string{
	0: "FORMATNULL",
	1: "XML",
	2: "JSON",
	3: "PROTOBUF",
	4: "RAWQUERY",
}
var RestfulFormat_value = map[string]int32{
	"FORMATNULL": 0,
	"XML":        1,
	"JSON":       2,
	"PROTOBUF":   3,
	"RAWQUERY":   4,
}

func (x RestfulFormat) String() string {
	return proto.EnumName(RestfulFormat_name, int32(x))
}
func (RestfulFormat) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Proto struct {
	// 全局唯一ID，用于日志追踪
	Bizid string `protobuf:"bytes,1,opt,name=Bizid" json:"Bizid,omitempty" xml:"Bizid,omitempty"`
	// HTTP Header
	Header map[string]string `protobuf:"bytes,2,rep,name=Header" json:"Header,omitempty" xml:"Header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Form Value
	Form map[string]string `protobuf:"bytes,3,rep,name=Form" json:"Form,omitempty" xml:"Form,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 集成zipkin trace功能
	TraceMap map[string]string `protobuf:"bytes,4,rep,name=TraceMap" json:"TraceMap,omitempty" xml:"TraceMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 递增请求ID，服务内唯一
	RequestID int64 `protobuf:"varint,5,opt,name=RequestID" json:"RequestID" xml:"RequestID,omitempty"`
	// 路由 Path 如：/services/v1/order
	ServeURI string `protobuf:"bytes,6,opt,name=ServeURI" json:"ServeURI,omitempty" xml:"ServeURI,omitempty"`
	// 数据编码格式
	Format RestfulFormat `protobuf:"varint,7,opt,name=Format,enum=protocol.RestfulFormat" json:"Format" xml:"Format,omitempty"`
	// 服务方法 create
	ServeMethod string `protobuf:"bytes,8,opt,name=ServeMethod" json:"ServeMethod,omitempty" xml:"ServeMethod,omitempty"`
	// HTTP Method
	Method     RestfulMethod `protobuf:"varint,9,opt,name=Method,enum=protocol.RestfulMethod" json:"Method" xml:"Method,omitempty"`
	RemoteAddr string        `protobuf:"bytes,10,opt,name=RemoteAddr" json:"RemoteAddr,omitempty" xml:"RemoteAddr,omitempty"`
	// 请求/响应信息
	Body []byte `protobuf:"bytes,11,opt,name=Body,proto3" json:"Body,omitempty" xml:"Body,omitempty"`
	// 响应错误信息，Body 和 Err 互斥
	Err []byte `protobuf:"bytes,12,opt,name=Err,proto3" json:"Err,omitempty" xml:"Err,omitempty"`
}

func (m *Proto) Reset()                    { *m = Proto{} }
func (m *Proto) String() string            { return proto.CompactTextString(m) }
func (*Proto) ProtoMessage()               {}
func (*Proto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Proto) GetBizid() string {
	if m != nil {
		return m.Bizid
	}
	return ""
}

func (m *Proto) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Proto) GetForm() map[string]string {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *Proto) GetTraceMap() map[string]string {
	if m != nil {
		return m.TraceMap
	}
	return nil
}

func (m *Proto) GetRequestID() int64 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *Proto) GetServeURI() string {
	if m != nil {
		return m.ServeURI
	}
	return ""
}

func (m *Proto) GetFormat() RestfulFormat {
	if m != nil {
		return m.Format
	}
	return RestfulFormat_FORMATNULL
}

func (m *Proto) GetServeMethod() string {
	if m != nil {
		return m.ServeMethod
	}
	return ""
}

func (m *Proto) GetMethod() RestfulMethod {
	if m != nil {
		return m.Method
	}
	return RestfulMethod_METHODNULL
}

func (m *Proto) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *Proto) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Proto) GetErr() []byte {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterType((*Proto)(nil), "protocol.Proto")
	proto.RegisterEnum("protocol.RestfulMethod", RestfulMethod_name, RestfulMethod_value)
	proto.RegisterEnum("protocol.RestfulFormat", RestfulFormat_name, RestfulFormat_value)
}

func init() { proto.RegisterFile("warhorse.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xf1, 0x9f, 0x38, 0xce, 0x38, 0x89, 0x56, 0x23, 0x24, 0x96, 0x00, 0x95, 0xc5, 0xc9,
	0xaa, 0x84, 0x91, 0xda, 0x03, 0x14, 0x4e, 0xb1, 0xe2, 0x90, 0xa0, 0x38, 0x36, 0x1b, 0x5b, 0xc0,
	0x05, 0xc9, 0x8d, 0x97, 0x12, 0x91, 0xe2, 0xb0, 0x75, 0x2a, 0x85, 0x6f, 0xcd, 0x37, 0x40, 0xbb,
	0x76, 0xd3, 0xb4, 0x12, 0x87, 0x9e, 0x32, 0x33, 0xef, 0xfd, 0xde, 0x2a, 0x7e, 0xd0, 0x5b, 0x2d,
	0xf9, 0x39, 0x17, 0x17, 0xfe, 0x46, 0x94, 0x55, 0x89, 0xb6, 0xfa, 0x59, 0x96, 0xeb, 0x97, 0x7f,
	0x4d, 0x68, 0x25, 0xea, 0xf6, 0x18, 0x5a, 0xc1, 0xea, 0xcf, 0xaa, 0xa0, 0x9a, 0xab, 0x79, 0x1d,
	0x56, 0x2f, 0x78, 0x0a, 0xd6, 0x84, 0xe7, 0x05, 0x17, 0x54, 0x77, 0x0d, 0xcf, 0x39, 0x79, 0xe6,
	0xdf, 0xa0, 0xbe, 0xc2, 0xfc, 0x5a, 0x0d, 0x7f, 0x55, 0x62, 0xc7, 0x1a, 0x2b, 0xbe, 0x02, 0x73,
	0x5c, 0x8a, 0x4b, 0x6a, 0x28, 0xe4, 0xe9, 0x7d, 0x44, 0x6a, 0x35, 0xa0, 0x6c, 0x78, 0x06, 0x76,
	0x2a, 0xf2, 0x25, 0x8f, 0xf2, 0x0d, 0x35, 0x15, 0xf2, 0xe2, 0x3e, 0x72, 0xa3, 0xd7, 0xd8, 0xde,
	0x8e, 0xcf, 0xa1, 0xc3, 0xf8, 0xef, 0x2d, 0xbf, 0xaa, 0xa6, 0x23, 0xda, 0x72, 0x35, 0xcf, 0x60,
	0xb7, 0x07, 0x1c, 0x80, 0xbd, 0xe0, 0xe2, 0x9a, 0x67, 0x6c, 0x4a, 0x2d, 0xf5, 0xaf, 0xf6, 0x3b,
	0xbe, 0x06, 0x4b, 0x3e, 0x9e, 0x57, 0xb4, 0xed, 0x6a, 0x5e, 0xff, 0xe4, 0xc9, 0xed, 0x93, 0x8c,
	0x5f, 0x55, 0xdf, 0xb7, 0xeb, 0x5a, 0x66, 0x8d, 0x0d, 0x5d, 0x70, 0x14, 0x1c, 0xf1, 0xea, 0x47,
	0x59, 0x50, 0x5b, 0xe5, 0x1d, 0x9e, 0x64, 0x64, 0x23, 0x76, 0xfe, 0x13, 0x59, 0xcb, 0xac, 0xb1,
	0xe1, 0x11, 0x00, 0xe3, 0x97, 0x65, 0xc5, 0x87, 0x45, 0x21, 0x28, 0xa8, 0xc4, 0x83, 0x0b, 0x22,
	0x98, 0x41, 0x59, 0xec, 0xa8, 0xe3, 0x6a, 0x5e, 0x97, 0xa9, 0x19, 0x09, 0x18, 0xa1, 0x10, 0xb4,
	0xab, 0x4e, 0x72, 0x1c, 0x9c, 0x81, 0x73, 0x50, 0x82, 0x34, 0xfc, 0xe4, 0xbb, 0xa6, 0x45, 0x39,
	0xca, 0x66, 0xaf, 0xf3, 0xf5, 0x96, 0x53, 0xbd, 0x6e, 0x56, 0x2d, 0xef, 0xf4, 0xb7, 0xda, 0xe0,
	0x0d, 0x74, 0xf6, 0x65, 0x3c, 0x08, 0x7c, 0x0f, 0xbd, 0x3b, 0x95, 0x3c, 0x04, 0x3e, 0xfe, 0x06,
	0xbd, 0x3b, 0xdf, 0x03, 0xfb, 0x00, 0x51, 0x98, 0x4e, 0xe2, 0xd1, 0x3c, 0x9b, 0xcd, 0xc8, 0x23,
	0xb4, 0xc1, 0x4c, 0xe2, 0x45, 0x4a, 0x34, 0x6c, 0x83, 0x91, 0x64, 0x29, 0xd1, 0xe5, 0xf0, 0x21,
	0x4c, 0x89, 0x81, 0x00, 0xd6, 0x28, 0x9c, 0x85, 0x69, 0x48, 0x4c, 0x74, 0xa0, 0x1d, 0x27, 0xe9,
	0x34, 0x9e, 0x2f, 0x48, 0x4b, 0x42, 0x93, 0x70, 0x38, 0x22, 0xd6, 0xf1, 0x7c, 0x9f, 0xdf, 0x54,
	0xd7, 0x07, 0x18, 0xc7, 0x2c, 0x1a, 0xa6, 0x4d, 0x7e, 0x1b, 0x8c, 0x2f, 0xd1, 0x8c, 0x68, 0x92,
	0xf9, 0xb8, 0x88, 0xe7, 0x44, 0xc7, 0x2e, 0xd8, 0x09, 0x8b, 0xd3, 0x38, 0xc8, 0xc6, 0xc4, 0x90,
	0x1b, 0x1b, 0x7e, 0xfe, 0x94, 0x85, 0xec, 0x2b, 0x31, 0x83, 0x23, 0x20, 0xab, 0xd2, 0xbf, 0x10,
	0x9b, 0x65, 0x53, 0x68, 0xbe, 0x0e, 0xec, 0xa4, 0x99, 0x12, 0xed, 0xdc, 0x52, 0xd7, 0xd3, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x7e, 0x5a, 0xc1, 0x65, 0x03, 0x00, 0x00,
}
